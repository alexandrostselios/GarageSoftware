@model GaragePortalNewUI.ViewModels.ServiceAppointmentViewModel
@inject LanguageService Resource
@using GaragePortalNewUI.Enum
@using System.Resources

@{
    ViewData["Title"] = @Resource.GetKey("Add_New_Service_Appointment");
    ResourceManager resourceManager = new ResourceManager("GaragePortalNewUI.Resources.SharedResource", typeof(ServiceAppointmentStatus).Assembly);
}


<div id="AddServiceAppointment" name="AddServiceAppointment" class="modal" tabindex="-1" role="form">
    <div class="modal-dialog draggable" role="document" style="max-width: 800px;">
        <div class="modal-content">
            <div class="modal-header dragable_touch d-block">
                <h5 class="modal-title">@Resource.GetKey("Add_Service_Appointment_Form")</h5>
@*                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>*@
            </div>
            <form method="post" asp-action="CreateServiceAppointmentPartial" asp-controller="ServiceAppointment" enctype="multipart/form-data">
                <input type="hidden" name="GarageID" value="@ViewBag.GarageID" />
                @* <input type="hidden" name="CustomerID" value="@ViewBag.CustomerID"/> *@
                <input type="hidden" name="CustomerID" id="hiddenCustomerID" value="@ViewBag.CustomerID" />

                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label asp-for="CustomerID" class="control-label">@Resource.GetKey("Customer_Name_Surname")</label>
                                <select id="CreateShowCustomers" asp-for="CustomerID" onchange="getCustomerCarsTolist()" class=" form-control select2">
                                    <option value='0'>--@Resource.GetKey("Select_Customer")--</option>
                                </select>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label asp-for="ServiceAppointmentDate" class="control-label">@Resource.GetKey("Service_Appointment_Date")</label>
                                <input asp-for="ServiceAppointmentDate" class="form-control" />
                                <span asp-validation-for="ServiceAppointmentDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label asp-for="ServiceAppointmentStatus" class="control-label">@Resource.GetKey("Service_Appointment_Status")</label>
                                <select id="ServiceAppointmentStatus" asp-for="ServiceAppointmentStatus" class="form-control">
                                    @foreach (var value in Enum.GetValues(typeof(ServiceAppointmentStatus)))
                                    {
                                        <option value="@((int)value)">@resourceManager.GetString($"ServiceAppointmentStatus_{value}")</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                         <div class="col-md-8">
                             <div class="form-group quickServiceHistory">
                                <label asp-for="CustomerCarID" class="control-label asterisk">@Resource.GetKey("Customer_Car")</label>
                                <select id="CreateShowCustomerCars" asp-for="CustomerCarID" class="form-control" required>
                                    <option value='0' selected>--@Resource.GetKey("Select_Car")--</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Kilometer" class="control-label">@Resource.GetKey("Kilometer")</label>
                                <input asp-for="Kilometer" class="form-control" id="serviceKilometer"/>
                                <span asp-validation-for="Kilometer" class="text-danger"></span>
                            </div>
                        </div>   
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label asp-for="ServiceAppointmentComments" class="control-label">@Resource.GetKey("Service_Appointment_Comments")</label>
                                <input asp-for="ServiceAppointmentComments" class="form-control" />
                                <span asp-validation-for="ServiceAppointmentComments" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" value="Create" class="btn btn-success">@Resource.GetKey("Register_Customer")</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">@Resource.GetKey("Cancel")</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.draggable').draggable({
            handle: '.modal-header'
        });

         var customerID = "@ViewBag.CustomerID"; // Retrieve value from ViewBag

        // If CustomerID is not null, set it in the select dropdown
        if (customerID && customerID !== "0") {
            $('#CreateShowCustomers').val(customerID).trigger('change');
        }

        // Update the hidden input field when the select value changes
        $('#CreateShowCustomers').change(function () {
            var selectedCustomerID = $(this).val();
            $('#hiddenCustomerID').val(selectedCustomerID); // Set the hidden input's value
        });
    });

    disableSubmitButton(0);
     $('#serviceKilometer').on('input', function () {
            var inputKilometers = parseInt($(this).val());
            var selectedCarId = $("#CreateShowCustomerCars").val();

            var submitButton = $('button[type="submit"]');

            console.log("SelectedCarID: " + selectedCarId + " CarData: " + carData[selectedCarId])

            if (selectedCarId && carData[selectedCarId]) {
                var carKilometers = carData[selectedCarId].kilometers;
                //console.log("Input: "+inputKilometers);
                // Check if input kilometers are greater than the car's kilometers
                if (inputKilometers < carKilometers) {
                    $(this).next('.text-danger').text('Cannot be less than current car’s kilometers (' + carKilometers + ').');
                    disableSubmitButton(0);
                } else if(inputKilometers === null || inputKilometers === undefined || isNaN(inputKilometers)){
                    $(this).next('.text-danger').text('You need to set Kilometers');
                    disableSubmitButton(0);
                } else {
                    $(this).next('.text-danger').text(''); // Clear error message
                    //submitButton.prop("disabled", false); // Enable the submit button
                    disableSubmitButton(1);
                }
            }
        });

    function disableSubmitButton(type){
        var submitButton = $('button[type="submit"]');
        if(type === 0){
            submitButton.prop("disabled", true);
            // Set the visibility of the .fa-ban icon inside the submit button to visible
            submitButton.find('.fa-ban').css('visibility', 'visible');
            // Set the custom cursor (ban icon) for the submit button
            submitButton.css('cursor', 'url("/images/ban.png"), auto');
        }else{
            submitButton.prop("disabled", false); // Enable the submit button
            submitButton.find('.fa-ban').css('visibility', 'hidden');
            submitButton.css('cursor', 'auto');
        }
    }

        function setCustomerID() {
        var selectedCustomerID = document.getElementById("ShowCustomers").value;
        document.getElementById("CustomerID").value = selectedCustomerID;
    }

    $(function () {
        var url = $(this).data('url');
        var customerID = "@ViewBag.CustomerID";
        var garageID = "@ViewBag.GarageID";
        var customerCarID = "@ViewBag.CustomerCarID";

        $.get(url).done(function (data) {
           if(customerID == null || customerID ==='undefined' || customerID ==="" || customerID == "null"){
                $.getJSON('@Resources.SettingsResources.Uri' + '/GetCustomersToList/' + garageID)
                //$.getJSON('http://alefhome.ddns.net:8082/api/GetCarManufacturersToList')
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    $.each(data, function (key, item) {
                        // Add a list item for the product.
                        $("#CreateShowCustomers").append($("<option></option>").val(item.customerID).html(item.customerSurname + ' ' + item.customerName));
                    });
                });
           }
           else{
                $.getJSON('@Resources.SettingsResources.Uri' + '/GetCustomerByIDToList/' + customerID + '/' + garageID)
                    //$.getJSON('http://alefhome.ddns.net:8082/api/GetCarManufacturersToList')
                    .done(function (data) {
                        // On success, 'data' contains a list of products.
                        $.each(data, function (key, item) {
                            // Add a list item for the product.
                            $("#CreateShowCustomers option[value='0']").remove();
                            $("#CreateShowCustomers").append($("<option selected></option>").val(item.customerID).html(item.customerSurname + ' ' + item.customerName));
                            $("#CreateShowCustomers").prop("disabled", true);

                            console.log("Customer Car ID: " + customerCarID);
                            if (customerCarID == null || customerCarID === 'undefined' || customerCarID === "" || customerCarID === "null") {
                                console.log("getCustomerCars");
                                getCustomerCarsTolist();
                            }else{
                                console.log("getCustomerCar ++");
                                getCustomerCarTolist();
                            }
                        });
                    });
            }

        });
    });

    function getCustomerCarTolist() {
        var url = $(this).data('url');
        var customerCarID = "@ViewBag.CustomerCarID";
        var garageID = "@ViewBag.GarageID";
        //console.log("GarageID: " + garageID + " == CustomerCarID: " + customerCarID);
        $.get(url).done(function (data) {
            if (customerCarID == null || customerCarID === 'undefined' || customerCarID === "") {
                console.log("Not Exist");
            } else {
                console.log("Exist");
                $.getJSON('@Resources.SettingsResources.Uri' + '/GetCustomerCarByCarID/' + customerCarID)
                    //$.getJSON('http://alefhome.ddns.net:8082/api/GetCarManufacturersToList')
                    .done(function (data) {
                        // Clear the carData object
                        carData = {}; // Reset car data
                        // On success, 'data' contains a list of products.
                        $.each(data, function (key, item) {
                            // Add a list item for the product.
                            $("#CreateShowCustomerCars option[value='0']").remove();
                            //$("#ShowCustomerCars").append($("<option></option>").val(item.id).html(item.manufacturerName + ' ' + item.modelName + ' ' + item.modelYear + ' (' + item.licencePlate + ' - ' + item.vin + ')')); $("#ShowCustomerCars").prop("disabled", true);
                            $("#CreateShowCustomerCars").append($("<option></option>").val(item.id).html(item.manufacturerName + ' ' + item.modelName + ' ' + item.modelYear + ' (' + item.licencePlate + ' - ' + item.vin + ')').prop("selected", true)); 
                            $("#CreateShowCustomerCars").prop("disabled",true);
                            console.log("ID: "+item.id + " Model Name: "+item.modelName);
                            carData[item.id] = {
                                manufacturerName: item.manufacturerName,
                                modelName: item.modelName,
                                modelYear: item.modelYear,
                                licencePlate: item.licencePlate,
                                vin: item.vin,
                                kilometers: parseInt(item.kilometer, 10) // Assuming this field exists
                            };
                            //updateKilometerDisplay(item.id);
                        });
                    });
            }
        });
    }

    function getCustomerCarsTolist(){
        var e = document.getElementById("CreateShowCustomers");
        var value = e.value;
        clearDataModels();
        var customerCarID = "@ViewBag.CustomerCarID";
        //updateKilometerDisplay(-1);
        //var url = $(this).data('url');
        $.getJSON('@Resources.SettingsResources.Uri' + '/GetCustomerCarsByCustomerID/' + @ViewBag.GarageID + '/' + value)
            //$.getJSON('http://alefhome.ddns.net:8082/api/GetCarManufacturersToList')
            .done(function (data) {
                var counter = 1;
                // Clear the carData object
                carData = {}; // Reset car data
                // On success, 'data' contains a list of products.
                $.each(data, function (key, item) {
                    carData[item.id] = {
                        manufacturerName: item.manufacturerName,
                        modelName: item.modelName,
                        modelYear: item.modelYear,
                        licencePlate: item.licencePlate,
                        vin: item.vin,
                        kilometers: parseInt(item.kilometer, 10) // Assuming this field exists
                    };
                    // Add a list item for the product.
                    $("#CreateShowCustomerCars").append($("<option></option>").val(item.id).html(counter + ') ' + item.manufacturerName + ' ' + item.modelName + ' ' + item.modelYear + ' (' + item.licencePlate + ' - ' + item.vin + ')'));
                    counter++;
                });
                SetViewBag();
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                // Handle the error gracefully
                console.log("Error fetching data: " + textStatus + " - " + errorThrown);
                if (jqXHR.status === 404) {
                    console.log("No cars found for this customer");
                }
            });
    }
    
    function clearDataModels() {
        var container = document.getElementById('CreateShowCustomerCars');
        while (container.childNodes.length > 2) {
            container.removeChild(container.lastChild);
        }
        // updateKilometerDisplay(-1);
    }

    

     function SetViewBag() {
            $.ajax({
                type: "POST",
                url: '/ServiceAppointment/SetViewBag',
                data: '{ value: null}',
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (r) {

                }
            });
        }
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
