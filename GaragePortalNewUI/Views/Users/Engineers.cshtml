@model IEnumerable<GaragePortalNewUI.Models.Users>
@inject LanguageService Resource

@{
    ViewData["Title"] = @Resource.GetKey("List_Of_Engineers");
}

@if (@ViewBag.UserType == GaragePortalNewUI.Enum.UserType.Admin.ToString())
{

    <div class="modal fade" id="successModalEngineer" tabindex="-1" role="dialog" aria-labelledby="successModalEngineerLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <center><p>@Resource.GetKey("Your_email_has_been_sent_successfully.")</p></center>
                    <center><button type="button" class="btn btn-primary" data-dismiss="modal" onclick="SetViewBag()">OK</button></center>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="failedModalEngineer" tabindex="-1" role="dialog" aria-labelledby="failedModalEngineerLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <center>
                        <p>@Resource.GetKey("Your_email_did_not_send.")</p>
                        <p>@Resource.GetKey("Please_try_again_later.")</p>
                    </center>
                    <center><button type="button" class="btn btn-primary" data-dismiss="modal" onclick="SetViewBag()">OK</button></center>
                </div>
            </div>
        </div>
    </div>

    <div id="addEngineerDIV"></div>
    <div id="editEngineerDIV"></div>
    <div id="sendEmailToEngineer"></div>
    <button class="btn btn-sm btn-primary m-2" id="btnAddEngineer" data-bs-toggle="ajax-modal" data-bs-target="#AddEngineer" data-url="@Url.Action("CreateEngineerPartial")">@Resource.GetKey("Add_New_Engineer")</button>

    @*<div>
        <br><br>
        @using (Html.BeginForm("Engineers", "Users", FormMethod.Get))
        {
            <table>
                <tr>
                    <td>
                        @Html.Partial("_SearchPartialView")
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBox("searchValue",null, new {Class = "form-control",placeholder=@Resource.GetKey("Enter_Details_for_Search")})
                    </td>
                    <td>
                        <input type="submit" id="Search" value="@Resource.GetKey("Search")" class="btn btn-success" />
                    </td>
                    <td>
                        <a class="af" asp-controller="PdfCreator" asp-action="CreatePDF" asp-route-entityType="3">@Resource.GetKey("Download_Engineers")</a>
                    </td>
                </tr>
            </table>
        }
    </div>*@
    <br>
    <br>
    <div id="engineerPlaceHolder"></div>
    <table id="engineersTable" class="table table-striped" style="display: none">
        <thead>
            <tr>
                <th class="all">
                    @Resource.GetKey("ID")
                </th>
                <th class="all">
                    @Resource.GetKey("Name")
                </th>
                <th class="all">
                    @Resource.GetKey("Surname")
                </th>
                <th class="all">
                    @Resource.GetKey("Email")
                </th>
                <th class="all">
                    @Resource.GetKey("Password")
                </th>
                <th class="all">
                    @Resource.GetKey("Engineer_Speciality")
                </th>
                <th class="all">
                    @Resource.GetKey("Modified_Date")
                </th>
                <th class="all">
                    @Resource.GetKey("Last_Login_Date")
                </th>
                <th class="all">
                    @Resource.GetKey("Enable_Access")
                </th>
                <th class="all">
                    @Resource.GetKey("User_Photo")
                </th>
                <th class="all">
                    @Resource.GetKey("GarageID")
                </th>
                <th class="all">
                    @Resource.GetKey("Creation_Date")
                </th>
                <th class="all">
                    @Resource.GetKey("UserType")
                </th>
                <th class="all">

                </th>
            </tr>
        </thead>
        <tbody>
            @*@foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastLoginDate)
                    </td>
                    <td>
                        @if (!(item.UserPhoto is null)){
                            <img src="data:image/jpg;base64, @Convert.ToBase64String(item.UserPhoto)" width="50" height="50" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EngineerSpeciality)
                    </td>
                    <td>
                        <a class="af" asp-controller="Email" asp-action="SendEmailToUser" asp-route-id="@item.ID" asp-route-userType="3">@Resource.GetKey("Send_Email")</a>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-primary m-2" id="btnEditEngineer" data-bs-toggle="ajax-modal" data-bs-target="#EditEngineer" data-url="@Url.Action("EditEngineerPartial",new{id = @item.ID, garageID = @item.GarageID})">@Resource.GetKey("Edit")</button>
                    </td>
                    <td>
                        <input type="button" class="btn btn-sm btn-danger m-2" value="@Resource.GetKey("Delete")" onclick="" />
                    </td>
                </tr>
            }*@
        </tbody>
    </table>
}else{
    <p><center>You are not authorized to access this page</center></p>
}

@section scripts{
    <script type="text/javascript">
        $(function () {
            $('#engineersTable tbody').empty();
            $.get('@Url.Action("GetEngineersList", "Users")', function (data) {
                // Clear existing rows
                $('#engineersTable tbody').empty();
                // Iterate through the data and append rows to the table
                $.each(data, function (index, item) {
                    var row = '<tr>' +
                        '<td>' + item.name + '</td>' +
                        '<td>' + item.surname + '</td>' +
                        // Add more cells if needed
                        '</tr>';
                    $('#engineersTable tbody').append(row);
                });
                //$('#customersPlaceHolder').html(data);
                console.log(data);
                var table = $('#engineersTable').DataTable({
                    data: data,
                    columns: [
                        {
                            data: 'id',
                            "visible": false
                        },
                        { data: 'name' },
                        { data: 'surname' },
                        { data: 'email' },
                        { data: 'password' },
                        { data: 'engineerSpeciality' },
                        { data: 'modifiedDate',
                            render: function (data, type, row) {
                                var modifiedDate = row.modifiedDate;

                                if (type === 'display' && modifiedDate) {
                                    var formattedDate = moment(modifiedDate).format('DD-MM-YYYY HH:mm:ss');
                                    return formattedDate;
                                }

                                // Return the original data for sorting and filtering
                                return data;
                            }
                        },
                        { data: 'lastLoginDate',
                            render: function (data, type, row) {
                                var lastLoginDate = row.lastLoginDate;

                                if (type === 'display' && lastLoginDate) {
                                    var formattedDate = moment(lastLoginDate).format('DD-MM-YYYY HH:mm:ss');
                                    return formattedDate;
                                }

                                // Return the original data for sorting and filtering
                                return data;
                            }
                        },
                        { data: 'enableAccess' },
                        {
                            data: 'userPhoto',
                            "visible": false
                        },
                        { data: 'garageID' },
                        { data: 'creationDate',
                            render: function (data, type, row) {
                                var creationDate = row.creationDate;

                                if (type === 'display' && creationDate) {
                                    var formattedDate = moment(creationDate).format('DD-MM-YYYY HH:mm:ss');
                                    return formattedDate;
                                }

                                // Return the original data for sorting and filtering
                                return data;
                            }
                        },
                        { data: 'userType' },
                        {
                            data: null,
                            render: function (data, type, row) {
                                    return '<div class="btn-group" role="group">' +
                                               '<a href="#" class="btn btn-email" title="@Resource.GetKey("Send_Email")" data-id="'+ row.id +'" data-email="'+ row.email +'" ><i class="fa fa-envelope" style="color:#0366d6"></i></a>' +
                                               '<a href="#" class="btn btn-edit" title="@Resource.GetKey("Edit")" id="btnEditCustomer" data-id="'+ row.id +'" ><i class="fa fa-edit" style="color:orange"></i></a>' +
                                           '</div>';
                            },
                            "width": "150px"
                        }
                    ]
                });
                $('#engineersTable').show();
                $('#engineersTable').DataTable({
                    "pageLength": 10,
                    "searching": true,
                    "paging": true,
                    "destroy": true,
                    "scrollCollapse": true,
                    "scrollY": '600px',
                    "columnDefs": [
                        {
                            "targets": [0,4,9,10,12],
                            "visible": false
                        },
                        {
                            "targets": [3,13],
                            "orderable": false
                        }
                    ],
                    "language": {
                        "lengthMenu": "@Resource.GetKey("Show_DataTable") _MENU_ @Resource.GetKey("Entries_Per_Page")",
                        "zeroRecords": "@Resource.GetKey("No_Matching_Records_Found_DataTable")",
                        "info": "@Resource.GetKey("Show_DataTable") _START_ @Resource.GetKey("To_DataTable") _END_ @Resource.GetKey("Of_DataTable") _TOTAL_ @Resource.GetKey("Entries_DataTable")",
                        "infoEmpty": "@Resource.GetKey("Showing_Empty_DataTable")",
                        "infoFiltered": "(@Resource.GetKey("Filtered_From_DataTable") _MAX_ @Resource.GetKey("Total_DataTable") @Resource.GetKey("Entries_DataTable"))",
                        "search": "@Resource.GetKey("Search"):",
                        "paginate": {
                            "first": "First",
                            "last": "Last",
                            "next": "@Resource.GetKey("Next_DataTable")",
                            "previous": "@Resource.GetKey("Previous_DataTable")"
                        }
                    }
                });
            });
        });

                // Handle email button click
        $('#engineersTable tbody').on('click', 'a.btn-email', function () {
            var id = $(this).data('id');
            var email = $(this).data('email');
            var url = "@Url.Action("SendEmailToUser", "Email")" + '/?id=' + id + '&email=' + email;
            // Load partial view into the container
            $.get(url, function (response) {
                $('#sendEmailToEngineer').html(response);
                $('#sendEmailToEngineer').find('.modal').modal('show');
            });
        });

        // Handle edit button click
        $('#engineersTable tbody').on('click', 'a.btn-edit', function () {
            var id = $(this).data('id');
            var url = "@Url.Action("EditEngineerPartial", "Users")" + '/?id=' + id + '&&garageID=' + @ViewBag.GarageID;
            // Load partial view into the container
            $.get(url, function (response) {
                $('#editEngineerDIV').html(response);
                $('#editEngineerDIV').find('.modal').modal('show');
            });
        });

        $(function () {
            var addEngineerDIVElement = $('#addEngineerDIV');
            $('button[data-bs-toggle="ajax-modal"]').click(function (event) {
                var url = $(this).data('url');
                $.get(url).done(function (data) {
                    addEngineerDIVElement.html(data);
                    addEngineerDIVElement.find('.modal').modal('show');
                })
            })

            //Save Add Makeform data
            addEngineerDIVElement.on('click', '[data-bs-save="modal"]', function (event) {
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr("action");
                var sendData = form.serialize();
                $.post(actionUrl, sendData).done(function (data) {
                    addEngineerDIVElement.find('.modal').modal('hide');
                    location.reload(true);
                })
            })
        })

        var message = "@ViewBag.SuccessMessage";
        if (message == "Successfully") {
            console.log('Successfully');
            $(document).ready(function () {
                $('#successModalEngineer').modal('show');
            });
            //alert(message);
        } else if (message == "Failed") {
            console.log('Failed');
            $(document).ready(function () {
                $('#failedModalEngineer').modal('show');
            });
            //alert(message);
        }

        function SetViewBag() {
            $.ajax({
                type: "POST",
                url: '/Users/SetViewBag',
                data: '{ value: null}',
                contentType: "application/json; charset=utf-8",
                dataType: "text",
                success: function (r) {

                }
            });
        }
    </script>
}